name: Release Drafter

on:
  push:
    branches:
      - release/*

  pull_request:
    types: [ opened, synchronize, reopened ]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  update_release_draft:
    runs-on: ubuntu-latest
    outputs:
      tag_created: ${{ steps.create_tag.outputs.tag_created }}

    steps:
      - name: Checkout code with full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Extract APK version
        id: extract_version
        run: |
          APK_VERSION=$(grep 'const val VERSION_NAME' buildSrc/src/main/java/Versions.kt | sed -E 's/.*VERSION_NAME\s*=\s*"([^"]+)".*/\1/')
          echo "APK_VERSION=$APK_VERSION" >> $GITHUB_ENV

      - name: Create and push tag if not exists
        id: create_tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          
          if git ls-remote --tags origin | grep -q "refs/tags/v${APK_VERSION}$"; then
            echo "Tag v${APK_VERSION} already exists"
            echo "tag_created=false" >> $GITHUB_OUTPUT
          else
            git tag v${APK_VERSION}
            git push origin v${APK_VERSION}
            echo "Tag v${APK_VERSION} created and pushed"
            echo "tag_created=true" >> $GITHUB_OUTPUT
          fi

      - name: Draft and publish release
        # if: steps.create_tag.outputs.tag_created == 'true'
        uses: release-drafter/release-drafter@v6
        with:
          config-name: release-drafter.config.yml
          version: v${{ env.APK_VERSION }}
          tag: v${{ env.APK_VERSION }}
          publish: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
